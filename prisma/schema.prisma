// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  password    String
  phoneNumber String
  address     String
  role        Role     @default(ADMIN)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Moderator {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  password    String
  phoneNumber String
  address     String
  role        Role     @default(PATIENT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Patient {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String    @unique
  password    String
  phoneNumber String
  address     String
  checkups    Checkup[] 
  role        Role      @default(PATIENT)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Checkup {
  id          Int         @id @default(autoincrement())
  firstName   String
  lastName    String
  phoneNumber String
  address     String
  date        String
  type        CheckupType @default(EXAMINATION)
  Patient     Patient?    @relation(fields: [patientId], references: [id], onDelete: Cascade)
  patientId   Int?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model DailyDates {
  id        Int     @id @default(autoincrement())
  date      String  @unique
  available Boolean @default(true)
}

enum CheckupType {
  EXAMINATION
  CONSULTATION
}

enum Role {
  ADMIN
  MODERATOR
  PATIENT
}
